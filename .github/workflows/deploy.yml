name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy_k8s:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gettext jq

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 'latest'  # ou sp√©cifiez une version comme '1.3.0'

      - name: Initialize Terraform
        run: |
          cd terraform
          echo "Initializing Terraform..."
          terraform init \
            -backend-config="storage_account_name=baguistorage" \
            -backend-config="container_name=abdelbagui" \
            -backend-config="key=.terraform.tfstate" \
            -backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -backend-config="client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Terraform Plan
        run: |
          cd terraform
          echo "Running Terraform Plan..."
          terraform plan \
            -var="appId=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="password=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Terraform Apply
        run: |
          cd terraform
          echo "Applying Terraform Changes..."
          terraform apply -auto-approve \
            -var="appId=${{ secrets.AZURE_CLIENT_ID }}" \
            -var="password=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"